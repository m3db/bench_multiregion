apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: m3coordinator
  name: m3coordinator-dedicated-{{ .Values.cluster_name }}
data:
  coordinator.yaml: |+
    listenAddress:
      type: "config"
      value: "0.0.0.0:7201"
    metrics:
      scope:
        prefix: "coordinator"
      prometheus:
        handlerPath: /metrics
        listenAddress: 0.0.0.0:7203 # until https://github.com/m3db/m3/issues/682 is resolved
      sanitization: prometheus
      samplingRate: 1.0
      extended: none
    clusters:
      - namespaces:
        {{- range $namespace := .Values.namespaces }}
        - namespace: {{ $namespace.name }}
          type: {{ $namespace.type }}
          retention: {{ $namespace.retention }}
          {{- if $namespace.resolution }}
          resolution: {{ $namespace.resolution }}
          {{- end }}
        {{- end }}
        client:
          config:
            service:
              # FILL ME IN
              env: {{ .Values.cluster_namespace }}/{{ .Values.cluster_name }}
              zone: embedded
              service: m3db
              cacheDir: /var/lib/m3kv
              etcdClusters:
              - zone: embedded
                endpoints:
                {{- range $endpoint := .Values.etcd_endpoints }}
                - {{ $endpoint }}
                {{- end }}
    rpc:
      enabled: true
      listenAddress: "0.0.0.0:7202"
      remoteListenAddresses:
      {{- range $endpoint := .Values.remote_coordinator_endpoints }}
      - {{ $endpoint }}
      {{- end }}
    ingest:
      ingester:
        workerPoolSize: 100
        opPool:
          size: 100
        retry:
          maxRetries: 3
          jitter: true
        logSampleRate: 0.01
      m3msg:
        server:
          listenAddress: "0.0.0.0:7507"
          retry:
            maxBackoff: 10s
            jitter: true
    carbon:
      ingester:
        listenAddress: "0.0.0.0:7204"
    tagOptions:
      idScheme: quoted
